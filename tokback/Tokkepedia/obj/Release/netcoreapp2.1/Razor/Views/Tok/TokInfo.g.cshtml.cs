#pragma checksum "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6d2cf9eae4bd4e3ccee3a7be5ed250ba3cea87a8"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Tok_TokInfo), @"mvc.1.0.view", @"/Views/Tok/TokInfo.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Tok/TokInfo.cshtml", typeof(AspNetCore.Views_Tok_TokInfo))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\_ViewImports.cshtml"
using Tokkepedia;

#line default
#line hidden
#line 2 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\_ViewImports.cshtml"
using Tokkepedia.Models;

#line default
#line hidden
#line 3 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\_ViewImports.cshtml"
using Tokkepedia.Models.ViewModels;

#line default
#line hidden
#line 2 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
using System.Drawing;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6d2cf9eae4bd4e3ccee3a7be5ed250ba3cea87a8", @"/Views/Tok/TokInfo.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ba46829bbb239bf192093e3fc0bf62e1c59ba7bf", @"/Views/_ViewImports.cshtml")]
    public class Views_Tok_TokInfo : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<TokInfoViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("nav-link"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-area", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Tok", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "TokReactions", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/purple.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/TokFeed.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/common.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jquery.flip.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/SetFeed.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(49, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 4 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
  
    ViewData["Title"] = Model.Tok.PrimaryFieldText + " - Tokkepedia";
    Layout = "~/Views/Shared/_LayoutPublic.cshtml";

    // Calculate Image Size
    int width = 0;
    int height = 0;

    if (!string.IsNullOrEmpty(Model.Tok.Image))
    {
        System.Net.WebRequest request = System.Net.WebRequest.Create(Model.Tok.Image);
        System.Net.WebResponse response = request.GetResponse();
        System.IO.Stream responseStream = response.GetResponseStream();
        Bitmap bmp = new Bitmap(responseStream);

        width = bmp.Width;
        height = bmp.Height;
        if (bmp.Width > 600) { width = bmp.Width - (int)(bmp.Width * 0.80); }
        if (bmp.Width > 250) { width = bmp.Width - (int)(bmp.Width * 0.40); }

        if (bmp.Height > 600) { height = bmp.Height - (int)(bmp.Height * 0.80); }
        if (bmp.Height > 250) { height = bmp.Height - (int)(bmp.Height * 0.40); }
    }

    string idAndAmp = $"{Model.Tok.Id}&amp";
    var fulldesc = string.Empty;
    if (Model.Tok.IsDetailBased)
    {
        foreach (var item in Model.Tok.Details)
        {
            fulldesc += item + " ";
        }
    }
    else
    {
        fulldesc += Model.Tok.SecondaryFieldText;
    }

#line default
#line hidden
            BeginContext(1295, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Meta", async() => {
                BeginContext(1312, 145, true);
                WriteLiteral("\r\n    <meta property=\"fb:app_id\" content=\"2096904330562973\" />\r\n    <meta name=\"twitter:card\" content=\"summary\" />\r\n    <meta name=\"twitter:site\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 1457, "\"", 1479, 2);
                WriteAttributeValue("", 1467, "@", 1467, 1, true);
                WriteAttributeValue("", 1469, "tokkepedia", 1469, 10, true);
                EndWriteAttribute();
                BeginContext(1480, 32, true);
                WriteLiteral(" />\r\n    <meta property=\"og:url\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 1512, "\"", 1625, 1);
#line 47 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
WriteAttributeValue("", 1522, $"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.PathBase}/tok?id={Model.Tok.Id}", 1522, 103, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(1626, 85, true);
                WriteLiteral(" />\r\n    <meta property=\"og:type\" content=\"website\" />\r\n    <meta property=\"og:title\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 1711, "\"", 1761, 3);
#line 49 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
WriteAttributeValue("", 1721, Model.Tok.PrimaryFieldText, 1721, 27, false);

#line default
#line hidden
                WriteAttributeValue(" ", 1748, "|", 1749, 2, true);
                WriteAttributeValue(" ", 1750, "Tokkepedia", 1751, 11, true);
                EndWriteAttribute();
                BeginContext(1762, 40, true);
                WriteLiteral(" />\r\n    <meta property=\"og:description\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 1802, "\"", 1892, 1);
#line 50 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
WriteAttributeValue("", 1812, Model.Tok.IsDetailBased ? Model.Tok.Details[0] : Model.Tok.SecondaryFieldText, 1812, 80, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(1893, 34, true);
                WriteLiteral(" />\r\n    <meta property=\"og:image\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 1927, "\"", 2011, 1);
#line 51 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
WriteAttributeValue("", 1937, !string.IsNullOrEmpty(Model.Tok.Image) ? Model.Tok.Image : string.Empty, 1937, 74, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2012, 38, true);
                WriteLiteral(" />\r\n    <meta property=\"og:image:alt\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 2050, "\"", 2087, 1);
#line 52 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
WriteAttributeValue("", 2060, Model.Tok.PrimaryFieldText, 2060, 27, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2088, 41, true);
                WriteLiteral(" />\r\n    <meta property=\"og:image:height\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 2129, "\"", 2146, 1);
#line 53 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
WriteAttributeValue("", 2139, height, 2139, 7, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2147, 40, true);
                WriteLiteral(" />\r\n    <meta property=\"og:image:width\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 2187, "\"", 2203, 1);
#line 54 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
WriteAttributeValue("", 2197, width, 2197, 6, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2204, 44, true);
                WriteLiteral(" />\r\n    <meta name=\"title\" property=\"title\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 2248, "\"", 2298, 3);
#line 55 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
WriteAttributeValue("", 2258, Model.Tok.PrimaryFieldText, 2258, 27, false);

#line default
#line hidden
                WriteAttributeValue(" ", 2285, "-", 2286, 2, true);
                WriteAttributeValue(" ", 2287, "Tokkepedia", 2288, 11, true);
                EndWriteAttribute();
                BeginContext(2299, 56, true);
                WriteLiteral(" />\r\n    <meta name=\"description\" property=\"description\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 2355, "\"", 2374, 1);
#line 56 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
WriteAttributeValue("", 2365, fulldesc, 2365, 9, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(2375, 5, true);
                WriteLiteral(" />\r\n");
                EndContext();
            }
            );
            BeginContext(2383, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Body", async() => {
                BeginContext(2400, 588, true);
                WriteLiteral(@"
    <script>
        window.twttr = (function (d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0],
                t = window.twttr || {};
            if (d.getElementById(id)) return t;
            js = d.createElement(s);
            js.id = id;
            js.src = ""https://platform.twitter.com/widgets.js"";
            fjs.parentNode.insertBefore(js, fjs);

            t._e = [];
            t.ready = function (f) {
                t._e.push(f);
            };

            return t;
        }(document, ""script"", ""twitter-wjs""));
    </script>
");
                EndContext();
            }
            );
            BeginContext(2991, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Styles", async() => {
                BeginContext(3010, 117, true);
                WriteLiteral("\r\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\r\n    <link rel=\"amphtml\"");
                EndContext();
                BeginWriteAttribute("href", " href=\"", 3127, "\"", 3151, 2);
                WriteAttributeValue("", 3134, "/tok?id=", 3134, 8, true);
#line 82 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
WriteAttributeValue("", 3142, idAndAmp, 3142, 9, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(3152, 3, true);
                WriteLiteral(">\r\n");
                EndContext();
            }
            );
            BeginContext(3158, 768, true);
            WriteLiteral(@"
<!-- **** BACKGROUND !Important **** -->
<section class=""tokkepedia-main clearfix"">
    <div class=""tokkepdia-sub"">
    </div>
</section>
<!-- **** /BACKGROUND **** -->

<section class=""special-area bg-white"" id=""about"">
    <div class=""container h-100"">
        <div class=""row h-100"">
            <div class=""col-12 col-md"">
                <div class=""col-12 col-md header-spacing"" id=""pageContainer"" style=""padding-left: 0px; padding-right: 0px;"">

                    <div class=""p-3 bg-white rounded box-shadow tokviewfeed"" style=""padding-left:0.2em!important;"">

                        <div class=""container-fluid tokviewfeed"">
                            <input id=""RenderedTokContent"" type=""hidden"" value="""" />
                            ");
            EndContext();
            BeginContext(3927, 45, false);
#line 102 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                       Write(await Html.PartialAsync("TokView", Model.Tok));

#line default
#line hidden
            EndContext();
            BeginContext(3972, 60, true);
            WriteLiteral("\r\n                        </div>\r\n\r\n                        ");
            EndContext();
            BeginContext(4032, 138, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "db8becb748c04646b686eb13b1c92d43", async() => {
                BeginContext(4140, 26, true);
                WriteLiteral("View reactions to this tok");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Area = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            if (__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues == null)
            {
                throw new InvalidOperationException(InvalidTagHelperIndexerAssignment("asp-route-id", "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper", "RouteValues"));
            }
            BeginWriteTagHelperAttribute();
#line 105 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                                                                                         WriteLiteral(Model.Tok.Id);

#line default
#line hidden
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"] = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-route-id", __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"], global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4170, 81, true);
            WriteLiteral("\r\n                        <br />\r\n                        <!-- Other Fields -->\r\n");
            EndContext();
#line 108 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                         for (var i = 0; i < Model.Tok.RequiredFields.Length; ++i)
                        {

#line default
#line hidden
            BeginContext(4362, 35, true);
            WriteLiteral("                            <small>");
            EndContext();
            BeginContext(4398, 27, false);
#line 110 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                              Write(Model.Tok.RequiredFields[i]);

#line default
#line hidden
            EndContext();
            BeginContext(4425, 45, true);
            WriteLiteral(":</small>\r\n                            <small");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 4470, "\"", 4498, 4);
            WriteAttributeValue("", 4475, "lblreq-", 4475, 7, true);
#line 111 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
WriteAttributeValue("", 4482, Model.Tok.Id, 4482, 13, false);

#line default
#line hidden
            WriteAttributeValue("", 4495, "-", 4495, 1, true);
#line 111 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
WriteAttributeValue("", 4496, i, 4496, 2, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(4499, 21, true);
            WriteLiteral(" class=\"reactionlbl\">");
            EndContext();
            BeginContext(4521, 32, false);
#line 111 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                                                               Write(Model.Tok.RequiredFieldValues[i]);

#line default
#line hidden
            EndContext();
            BeginContext(4553, 46, true);
            WriteLiteral("</small>\r\n                            <br />\r\n");
            EndContext();
#line 113 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                        }

#line default
#line hidden
            BeginContext(4626, 24, true);
            WriteLiteral("                        ");
            EndContext();
#line 114 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                         for (var i = 0; i < Model.Tok.OptionalFields.Length; ++i)
                        {

#line default
#line hidden
            BeginContext(4737, 35, true);
            WriteLiteral("                            <small>");
            EndContext();
            BeginContext(4773, 27, false);
#line 116 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                              Write(Model.Tok.OptionalFields[i]);

#line default
#line hidden
            EndContext();
            BeginContext(4800, 45, true);
            WriteLiteral(":</small>\r\n                            <small");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 4845, "\"", 4873, 4);
            WriteAttributeValue("", 4850, "lblopt-", 4850, 7, true);
#line 117 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
WriteAttributeValue("", 4857, Model.Tok.Id, 4857, 13, false);

#line default
#line hidden
            WriteAttributeValue("", 4870, "-", 4870, 1, true);
#line 117 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
WriteAttributeValue("", 4871, i, 4871, 2, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(4874, 21, true);
            WriteLiteral(" class=\"reactionlbl\">");
            EndContext();
            BeginContext(4896, 32, false);
#line 117 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                                                               Write(Model.Tok.OptionalFieldValues[i]);

#line default
#line hidden
            EndContext();
            BeginContext(4928, 46, true);
            WriteLiteral("</small>\r\n                            <br />\r\n");
            EndContext();
#line 119 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                        }

#line default
#line hidden
            BeginContext(5001, 129, true);
            WriteLiteral("                        <br />\r\n                        <small class=\"reactionlbl\">Notes:</small>\r\n                        <small");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 5130, "\"", 5157, 2);
            WriteAttributeValue("", 5135, "lblnotes-", 5135, 9, true);
#line 122 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
WriteAttributeValue("", 5144, Model.Tok.Id, 5144, 13, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(5158, 21, true);
            WriteLiteral(" class=\"reactionlbl\">");
            EndContext();
            BeginContext(5180, 15, false);
#line 122 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                                                          Write(Model.Tok.Notes);

#line default
#line hidden
            EndContext();
            BeginContext(5195, 129, true);
            WriteLiteral("</small>\r\n                    </div>\r\n\r\n                    <div class=\"comments tokviewfeed\" style=\"background-color: white;\">\r\n");
            EndContext();
#line 126 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                         if (User != null)
                        {
                            if (User.Identity.IsAuthenticated)
                            {

#line default
#line hidden
            BeginContext(5490, 254, true);
            WriteLiteral("                                <div class=\"row\">\r\n                                    <div class=\"col-md-12\" style=\"padding-left: 4.75rem;\">\r\n                                        <label style=\"margin-top: .5rem;\">Comments: <span id=\"lblCommentCount\">");
            EndContext();
            BeginContext(5746, 44, false);
#line 132 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                                                                                           Write(Model.Tok.OwnReactions?.Comments?.Count ?? 0);

#line default
#line hidden
            EndContext();
            BeginContext(5791, 272, true);
            WriteLiteral(@"</span></label>
                                        <button class=""btn btn-primary float-right"" type=""button"" data-toggle=""modal"" data-target=""#modalMyComments"">My Comments</button>
                                    </div>
                                </div>
");
            EndContext();
#line 136 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                            }
                        }

#line default
#line hidden
            BeginContext(6121, 155, true);
            WriteLiteral("                        <div class=\"comment-wrap\">\r\n                            <div class=\"photo\">\r\n                                <div class=\"avatar\">\r\n");
            EndContext();
#line 141 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                     if (User != null)
                                    {
                                        if (User.Identity.IsAuthenticated)
                                        {
                                            if (!string.IsNullOrEmpty(ViewBag.UserPhoto))
                                            {

#line default
#line hidden
            BeginContext(6628, 52, true);
            WriteLiteral("                                                <img");
            EndContext();
            BeginWriteAttribute("src", " src=\"", 6680, "\"", 6704, 1);
#line 147 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
WriteAttributeValue("", 6686, ViewBag.UserPhoto, 6686, 18, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(6705, 5, true);
            WriteLiteral(" />\r\n");
            EndContext();
#line 148 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                            }
                                            else
                                            {

#line default
#line hidden
            BeginContext(6854, 48, true);
            WriteLiteral("                                                ");
            EndContext();
            BeginContext(6902, 33, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "fd988374134f455993084d7f987cd17a", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(6935, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 152 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                            }
                                        }
                                        else
                                        {

#line default
#line hidden
            BeginContext(7116, 44, true);
            WriteLiteral("                                            ");
            EndContext();
            BeginContext(7160, 33, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "ae886a51525c4e25b4212f33fe6b3d1c", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7193, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 157 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                        }
                                    }
                                    else
                                    {

#line default
#line hidden
            BeginContext(7358, 40, true);
            WriteLiteral("                                        ");
            EndContext();
            BeginContext(7398, 33, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "09c57d136a2b4c5cac2dc933f60e507b", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7431, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 162 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                    }

#line default
#line hidden
            BeginContext(7472, 165, true);
            WriteLiteral("                                </div>\r\n                            </div>\r\n                            <div class=\"comment-block\">\r\n                                ");
            EndContext();
            BeginContext(7637, 1100, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c457fed72aaf40ca829aeae51e923c76", async() => {
                BeginContext(7653, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 167 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                     if (User != null)
                                    {
                                        if (User.Identity.IsAuthenticated)
                                        {

#line default
#line hidden
                BeginContext(7869, 163, true);
                WriteLiteral("                                            <textarea class=\"form-control\" name=\"\" id=\"CommentText\" cols=\"30\" rows=\"1\" placeholder=\"Add a comment...\"></textarea>\r\n");
                EndContext();
#line 172 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                        }
                                        else
                                        {

#line default
#line hidden
                BeginContext(8164, 168, true);
                WriteLiteral("                                            <textarea class=\"form-control\" name=\"\" id=\"CommentText\" cols=\"30\" rows=\"1\" placeholder=\"Sign in to comment...\"></textarea>\r\n");
                EndContext();
#line 176 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                        }
                                    }
                                    else
                                    {

#line default
#line hidden
                BeginContext(8495, 164, true);
                WriteLiteral("                                        <textarea class=\"form-control\" name=\"\" id=\"CommentText\" cols=\"30\" rows=\"1\" placeholder=\"Sign in to comment...\"></textarea>\r\n");
                EndContext();
#line 181 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                    }

#line default
#line hidden
                BeginContext(8698, 32, true);
                WriteLiteral("                                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8737, 38, true);
            WriteLiteral("\r\n                            </div>\r\n");
            EndContext();
#line 184 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                             if (User != null)
                            {
                                if (User.Identity.IsAuthenticated)
                                {

#line default
#line hidden
            BeginContext(8957, 59, true);
            WriteLiteral("                                    <button id=\"btncomment\"");
            EndContext();
            BeginWriteAttribute("name", " name=\"", 9016, "\"", 9036, 1);
#line 188 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
WriteAttributeValue("", 9023, Model.Tok.Id, 9023, 13, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(9037, 138, true);
            WriteLiteral(" type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary commentbtn float-right\" disabled style=\"margin-bottom: 4px;\">Comment</button>\r\n");
            EndContext();
#line 189 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                }
                                else
                                {

#line default
#line hidden
            BeginContext(9283, 43, true);
            WriteLiteral("                                    <button");
            EndContext();
            BeginWriteAttribute("name", " name=\"", 9326, "\"", 9346, 1);
#line 192 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
WriteAttributeValue("", 9333, Model.Tok.Id, 9333, 13, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(9347, 117, true);
            WriteLiteral(" type=\"button\" class=\"btn btn-primary commentbtn float-right\" disabled style=\"margin-bottom: 4px;\">Comment</button>\r\n");
            EndContext();
#line 193 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                }
                            }
                            else
                            {

#line default
#line hidden
            BeginContext(9595, 39, true);
            WriteLiteral("                                <button");
            EndContext();
            BeginWriteAttribute("name", " name=\"", 9634, "\"", 9654, 1);
#line 197 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
WriteAttributeValue("", 9641, Model.Tok.Id, 9641, 13, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(9655, 117, true);
            WriteLiteral(" type=\"button\" class=\"btn btn-primary commentbtn float-right\" disabled style=\"margin-bottom: 4px;\">Comment</button>\r\n");
            EndContext();
#line 198 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                            }

#line default
#line hidden
            BeginContext(9803, 483, true);
            WriteLiteral(@"                        </div>
                        <br /><hr />

                        <div class=""center"" id=""containerProgress"" style=""margin: 24px auto"">
                            <div class=""colorlib-load""></div>
                        </div>
                        <div id=""tokContainer"" style=""margin-top: 1em !important;"">

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

");
            EndContext();
#line 214 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
     if (User != null)
    {
        if (User.Identity.IsAuthenticated)
        {

#line default
#line hidden
            BeginContext(10372, 1663, true);
            WriteLiteral(@"            <div class=""modal fade"" id=""modalMyComments"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"">
                <div class=""modal-dialog modal-dialog-centered"" role=""document"">
                    <div class=""modal-content"">
                        <div class=""modal-header"">
                            <h5 class=""modal-title"">My Comments</h5>
                            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                <span aria-hidden=""true"">&times;</span>
                            </button>
                        </div>
                        <div class=""modal-body"">
                            <nav>
                                <div class=""nav nav-tabs"" id=""nav-tab"" role=""tablist"">
                                    <a class=""nav-item nav-link active"" id=""tabComment"" data-toggle=""tab"" href=""#nav-comment"" role=""tab"" aria-controls=""nav-comment"" aria-selected=""false"" style=""color:#495057;"">Comments</a>
                  ");
            WriteLiteral(@"                  <a class=""nav-item nav-link"" id=""tabAccurate"" data-toggle=""tab"" href=""#nav-accurate"" role=""tab"" aria-controls=""nav-accurate"" aria-selected=""false"" style=""color:#495057;"">Accurates</a>
                                    <a class=""nav-item nav-link"" id=""tabInAccurate"" data-toggle=""tab"" href=""#nav-inaccurate"" role=""tab"" aria-controls=""nav-inaccurate"" aria-selected=""false"" style=""color:#495057;"">Inaccurates</a>
                                </div>
                            </nav>
                            <div class=""tab-pane fade active show"" id=""nav-comment"" role=""tabpanel"" aria-labelledby=""tabComment"">
");
            EndContext();
#line 236 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                 if (Model.Tok.OwnReactions != null)
                                {
                                    foreach (var reaction in (Model.Tok.OwnReactions?.Comments ?? new List<TokkepediaReaction>()))
                                    {
                                        if (reaction.Kind == "comment")
                                        {
                                            

#line default
#line hidden
            BeginContext(12472, 48, false);
#line 242 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                       Write(await Html.PartialAsync("CommentView", reaction));

#line default
#line hidden
            EndContext();
#line 242 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                                                                             
                                        }
                                    }
                                }

#line default
#line hidden
            BeginContext(12639, 159, true);
            WriteLiteral("\r\n                            </div>\r\n                            <div class=\"tab-pane fade\" id=\"nav-accurate\" role=\"tabpanel\" aria-labelledby=\"tabAccurate\">\r\n");
            EndContext();
#line 249 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                 if (Model.Tok.OwnReactions != null)
                                {
                                    foreach (var reaction in (Model.Tok.OwnReactions.Accurates ?? new List<TokkepediaReaction>()))
                                    {
                                        if (reaction.Kind == "accurate")
                                        {
                                            

#line default
#line hidden
            BeginContext(13236, 48, false);
#line 255 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                       Write(await Html.PartialAsync("CommentView", reaction));

#line default
#line hidden
            EndContext();
#line 255 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                                                                             
                                        }
                                    }
                                }

#line default
#line hidden
            BeginContext(13403, 163, true);
            WriteLiteral("\r\n                            </div>\r\n                            <div class=\"tab-pane fade\" id=\"nav-inaccurate\" role=\"tabpanel\" aria-labelledby=\"tabInAccurate\">\r\n");
            EndContext();
#line 262 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                 if (Model.Tok.OwnReactions != null)
                                {
                                    foreach (var reaction in (Model.Tok.OwnReactions.Inaccurates ?? new List<TokkepediaReaction>()))
                                    {
                                        if (reaction.Kind == "inaccurate")
                                        {
                                            

#line default
#line hidden
            BeginContext(14008, 48, false);
#line 268 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                       Write(await Html.PartialAsync("CommentView", reaction));

#line default
#line hidden
            EndContext();
#line 268 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                                                                                             
                                        }
                                    }
                                }

#line default
#line hidden
            BeginContext(14175, 353, true);
            WriteLiteral(@"                            </div>
                        </div>
                        <div class=""modal-footer deletebtngroup"">
                            <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
");
            EndContext();
#line 280 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
        }
    }

#line default
#line hidden
            BeginContext(14546, 14, true);
            WriteLiteral("</section>\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(14578, 104, true);
                WriteLiteral("\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/bodymovin/4.13.0/bodymovin.js\"></script>\r\n    ");
                EndContext();
                BeginContext(14682, 39, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1eba849e8eda4aa8a3314881848aa25c", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(14721, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(14727, 38, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "944abbc2072e49388f1faec082d850fb", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(14765, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(14771, 43, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "696024d73af04c80b2ee4e57dc83ad31", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(14814, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 289 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
     if (User != null)
    {

#line default
#line hidden
                BeginContext(14847, 8, true);
                WriteLiteral("        ");
                EndContext();
                BeginContext(14855, 39, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6c8db7308fed4702a52f0384f6231cc9", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(14894, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 292 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
    }

#line default
#line hidden
                BeginContext(14903, 1965, true);
                WriteLiteral(@"
    <script>
    $(document).ready(function () {
        $(""#btncomment"").on(""click"", function (event) {
            var id = $(this).attr('name');

            var idText = ""#CommentText"";
            var text = $(idText).val();

            var ReactionOptions = {};
            ReactionOptions.url = ""/Home/Comment"";
            ReactionOptions.type = ""POST"";
            ReactionOptions.data = JSON.stringify({ group: id, comment: text }); //group: $(""#Reaction"").val()
            ReactionOptions.datatype = ""json"";
            ReactionOptions.contentType = ""application/json"";
            //alert(ReactionOptions.data.toString());

            ReactionOptions.success = function (Data) {
                //$(""#TokFeed"").prepend(Data);
                alert(""Comment added"")
            };
            ReactionOptions.error = function () {

            };
            $.ajax(ReactionOptions);
        });

        //Comment text required
        $(""#CommentText"").on(""input"", function (even");
                WriteLiteral(@"t) {
            if ($(this).val().length <= 0) {
                $(""#btncomment"").prop(""disabled"", true);
            }
            else {
                $(""#btncomment"").prop(""disabled"", false);
            }
        });

        //Image popup

        $('#TokFeed').magnificPopup({ //.image-popup-no-margins
            delegate: '.tokviewitem .tokviewsection .tokviewrow .tokviewcol .image-popup-no-margins',
            type: 'image',
            closeOnContentClick: true,
            closeBtnInside: false,
            fixedContentPos: true,
            mainClass: 'mfp-no-margins mfp-with-zoom', // class to remove default margin from left and right side
            image: {
                verticalFit: true
            },
            zoom: {
                enabled: true,
                duration: 300 // don't foget to change the duration also in CSS
            }
        });

        activityId = '");
                EndContext();
                BeginContext(16869, 20, false);
#line 348 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Tok\TokInfo.cshtml"
                 Write(Model.Tok.ActivityId);

#line default
#line hidden
                EndContext();
                BeginContext(16889, 150, true);
                WriteLiteral("\';\r\n        isComment = true;\r\n        InitializeCommentData(activityId, $(\"#tokContainer\"));\r\n        ApplyMagnificPopup();\r\n    });\r\n    </script>\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TokInfoViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
