#pragma checksum "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7a7ebeabd974ccdeb63338a4e9928a77539e7010"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Shop), @"mvc.1.0.view", @"/Views/Home/Shop.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Shop.cshtml", typeof(AspNetCore.Views_Home_Shop))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\_ViewImports.cshtml"
using Tokkepedia;

#line default
#line hidden
#line 2 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\_ViewImports.cshtml"
using Tokkepedia.Models;

#line default
#line hidden
#line 3 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\_ViewImports.cshtml"
using Tokkepedia.Models.ViewModels;

#line default
#line hidden
#line 2 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
using Microsoft.Extensions.Options;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7a7ebeabd974ccdeb63338a4e9928a77539e7010", @"/Views/Home/Shop.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ba46829bbb239bf192093e3fc0bf62e1c59ba7bf", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Shop : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<PurchaseModel>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/gold.gif"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("width", new global::Microsoft.AspNetCore.Html.HtmlString("24"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("height", new global::Microsoft.AspNetCore.Html.HtmlString("24"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("imgAvatar"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/tokket.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width: 96px;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(123, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 5 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
  
    ViewData["Title"] = "Shop";
    Layout = "~/Views/Shared/_LayoutPublic.cshtml";

    var pkgCounter = 1;
    List<Sticker> stickers = ViewBag.Stickers ?? new List<Sticker>();

#line default
#line hidden
            BeginContext(316, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Meta", async() => {
                BeginContext(333, 13, true);
                WriteLiteral("\r\n    <script");
                EndContext();
                BeginWriteAttribute("src", " src=\"", 346, "\"", 422, 2);
                WriteAttributeValue("", 352, "https://www.paypal.com/sdk/js?client-id=", 352, 40, true);
#line 14 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue("", 392, paypalSettings.Value.ClientId, 392, 30, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(423, 18, true);
                WriteLiteral(">\r\n    </script>\r\n");
                EndContext();
            }
            );
            BeginContext(444, 1330, true);
            WriteLiteral(@"
<!-- **** BACKGROUND !Important **** -->
<section class=""tokkepedia-main clearfix"">
    <div class=""tokkepdia-sub"">
    </div>
</section>
<!-- **** /BACKGROUND **** -->

<section class=""special-area bg-white"" id=""shop"">
    <div class=""container h-100"">
        <div class=""row h-100"">
            <div class=""col-12 col-md header-spacing"">
                <div class=""container"">
                    <div class=""row"">
                        <div class=""col-12"">
                            <!-- Heading Text  -->
                            <div class=""section-heading text-center"">
                                <h2>Shop (coming soon)</h2>
                                <div class=""line-shape""></div>
                            </div>
                        </div>
                    </div>

                    <div class=""row"">
                        <div class=""col-md-12"">
                            <h2 style=""color: #7F8C8D; float: left;"">Avatars</h2>
                           ");
            WriteLiteral(@" <h4 style=""position: absolute; right: 0; bottom: 0; margin-right: 24px;""><a href=""/avatars"" style=""color: #9B59B6;"">View All <i class=""fas fa-arrow-circle-right""></i></a></h4>
                        </div>
                    </div>
                    <div class=""row"" style=""margin-bottom: 16px;"">
");
            EndContext();
#line 47 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                         foreach (var prod in Model.Where(x => x.ProductType == ProductType.Avatars).Take(3))
                        {

#line default
#line hidden
            BeginContext(1912, 357, true);
            WriteLiteral(@"                            <div class=""col-md-4"">
                                <div class=""container"" style=""border: 1px solid #D5DBDB"">
                                    <div class=""row"">
                                        <div class=""col-md-12 text-center"" style=""background-color: #EAEDED"">
                                            <img");
            EndContext();
            BeginWriteAttribute("src", " src=\"", 2269, "\"", 2286, 1);
#line 53 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue("", 2275, prod.Image, 2275, 11, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2287, 363, true);
            WriteLiteral(@" style=""width: 256px;"" />
                                        </div>
                                    </div>
                                    <div class=""row p-3"">
                                        <div class=""col-md-8"">
                                            <div class=""col-md-12"">
                                                <h5>");
            EndContext();
            BeginContext(2651, 9, false);
#line 59 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                               Write(prod.Name);

#line default
#line hidden
            EndContext();
            BeginContext(2660, 176, true);
            WriteLiteral("</h5>\r\n                                            </div>\r\n                                            <div class=\"col-md-12\">\r\n                                                ");
            EndContext();
            BeginContext(2836, 54, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "4f0c7941e8484fd38086c32ec599389f", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2890, 72, true);
            WriteLiteral("<span style=\"font-size: 18px;vertical-align: middle; margin-left: 4px;\">");
            EndContext();
            BeginContext(2963, 15, false);
#line 62 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                                                                                                                                                         Write(prod.PriceCoins);

#line default
#line hidden
            EndContext();
            BeginContext(2978, 206, true);
            WriteLiteral(" coins</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-4 text-center center-content\">\r\n");
            EndContext();
#line 66 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                             if (User.Identity.IsAuthenticated)
                                            {

#line default
#line hidden
            BeginContext(3312, 147, true);
            WriteLiteral("                                                <button type=\"button\" class=\"btn btn-success btnBuy\" style=\"border-radius: 50%;padding: 12px 24px;\"");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 3459, "\"", 3550, 11);
            WriteAttributeValue("", 3469, "BuyAvatar(\'", 3469, 11, true);
#line 68 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue("", 3480, prod.Id, 3480, 8, false);

#line default
#line hidden
            WriteAttributeValue("", 3488, "\',\'", 3488, 3, true);
#line 68 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue("", 3491, prod.Image, 3491, 11, false);

#line default
#line hidden
            WriteAttributeValue("", 3502, "\',\'", 3502, 3, true);
#line 68 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue("", 3505, prod.Name, 3505, 10, false);

#line default
#line hidden
            WriteAttributeValue("", 3515, "\',", 3515, 2, true);
#line 68 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue("", 3517, prod.PriceCoins, 3517, 16, false);

#line default
#line hidden
            WriteAttributeValue("", 3533, ",", 3533, 1, true);
#line 68 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue(" ", 3534, prod.PriceUSD, 3535, 14, false);

#line default
#line hidden
            WriteAttributeValue("", 3549, ")", 3549, 1, true);
            EndWriteAttribute();
            BeginContext(3551, 65, true);
            WriteLiteral(" data-toggle=\"modal\" data-target=\"#purchase-modal\">Buy</button>\r\n");
            EndContext();
#line 69 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                            }
                                            else
                                            {

#line default
#line hidden
            BeginContext(3760, 200, true);
            WriteLiteral("                                                <button type=\"button\" class=\"btn btn-success btnBuy\" style=\"border-radius: 50%;padding: 12px 24px;\" onclick=\"RequireLogin(\'you account\')\">Buy</button>\r\n");
            EndContext();
#line 73 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                            }

#line default
#line hidden
            BeginContext(4007, 168, true);
            WriteLiteral("                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n");
            EndContext();
#line 78 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                        }

#line default
#line hidden
            BeginContext(4202, 547, true);
            WriteLiteral(@"                    </div>

                    <div class=""row"">
                        <div class=""col-md-12"">
                            <h2 style=""color: #7F8C8D; float: left;"">Stickers</h2>
                            <h4 style=""position: absolute; right: 0; bottom: 0; margin-right: 24px;""><a href=""/stickers"" style=""color: #9B59B6;"">View All <i class=""fas fa-arrow-circle-right""></i></a></h4>
                        </div>
                    </div>
                    <div class=""row no-gutters"" style=""margin-bottom: 16px;"">
");
            EndContext();
#line 88 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                         foreach (var prod in stickers.Take(5))
                        {

#line default
#line hidden
            BeginContext(4841, 403, true);
            WriteLiteral(@"                            <div class=""col"" style=""margin-right: 2px;"">
                                <div class=""container"" style=""border: 1px solid #D5DBDB;padding:2px;"">
                                    <div class=""row no-gutters"">
                                        <div class=""col-md-12 text-center"" style=""background-color: #EAEDED"">
                                            <img");
            EndContext();
            BeginWriteAttribute("src", " src=\"", 5244, "\"", 5261, 1);
#line 94 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue("", 5250, prod.Image, 5250, 11, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(5262, 457, true);
            WriteLiteral(@" style=""height: 48px;"" />
                                        </div>
                                    </div>
                                    <div class=""row no-gutters"">
                                        <div class=""col-md-8"">
                                            <div class=""col-md-12"">
                                                <p style=""white-space: nowrap; overflow: hidden; text-overflow: clip; margin-bottom: 0px;"">");
            EndContext();
            BeginContext(5720, 9, false);
#line 100 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                                                                                                                      Write(prod.Name);

#line default
#line hidden
            EndContext();
            BeginContext(5729, 175, true);
            WriteLiteral("</p>\r\n                                            </div>\r\n                                            <div class=\"col-md-12\">\r\n                                                ");
            EndContext();
            BeginContext(5904, 54, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "1ad47292934b458f9265b7cbd796a459", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5958, 72, true);
            WriteLiteral("<span style=\"font-size: 14px;vertical-align: middle; margin-left: 4px;\">");
            EndContext();
            BeginContext(6031, 15, false);
#line 103 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                                                                                                                                                         Write(prod.PriceCoins);

#line default
#line hidden
            EndContext();
            BeginContext(6046, 206, true);
            WriteLiteral(" coins</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-4 text-center center-content\">\r\n");
            EndContext();
#line 107 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                             if (User.Identity.IsAuthenticated)
                                            {

#line default
#line hidden
            BeginContext(6380, 145, true);
            WriteLiteral("                                                <button type=\"button\" class=\"btn btn-success btnBuy\" style=\"border-radius: 8px;padding: 6px 8px;\"");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 6525, "\"", 6616, 11);
            WriteAttributeValue("", 6535, "BuyAvatar(\'", 6535, 11, true);
#line 109 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue("", 6546, prod.Id, 6546, 8, false);

#line default
#line hidden
            WriteAttributeValue("", 6554, "\',\'", 6554, 3, true);
#line 109 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue("", 6557, prod.Image, 6557, 11, false);

#line default
#line hidden
            WriteAttributeValue("", 6568, "\',\'", 6568, 3, true);
#line 109 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue("", 6571, prod.Name, 6571, 10, false);

#line default
#line hidden
            WriteAttributeValue("", 6581, "\',", 6581, 2, true);
#line 109 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue("", 6583, prod.PriceCoins, 6583, 16, false);

#line default
#line hidden
            WriteAttributeValue("", 6599, ",", 6599, 1, true);
#line 109 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue(" ", 6600, prod.PriceUSD, 6601, 14, false);

#line default
#line hidden
            WriteAttributeValue("", 6615, ")", 6615, 1, true);
            EndWriteAttribute();
            BeginContext(6617, 65, true);
            WriteLiteral(" data-toggle=\"modal\" data-target=\"#purchase-modal\">Buy</button>\r\n");
            EndContext();
#line 110 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                            }
                                            else
                                            {

#line default
#line hidden
            BeginContext(6826, 198, true);
            WriteLiteral("                                                <button type=\"button\" class=\"btn btn-success btnBuy\" style=\"border-radius: 8px;padding: 6px 8px;\" onclick=\"RequireLogin(\'you account\')\">Buy</button>\r\n");
            EndContext();
#line 114 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                            }

#line default
#line hidden
            BeginContext(7071, 168, true);
            WriteLiteral("                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n");
            EndContext();
#line 119 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                        }

#line default
#line hidden
            BeginContext(7266, 202, true);
            WriteLiteral("                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <h2 style=\"color: #7F8C8D; float: left;\">Tokmojis</h2>\r\n");
            EndContext();
            BeginContext(7677, 128, true);
            WriteLiteral("                        </div>\r\n                    </div>\r\n                    <div class=\"row\" style=\"margin-bottom: 16px;\">\r\n");
            EndContext();
#line 129 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                         foreach (var prod in Model.Where(x => x.ProductType == ProductType.Tokmoji))
                        {

#line default
#line hidden
            BeginContext(7935, 357, true);
            WriteLiteral(@"                            <div class=""col-md-4"">
                                <div class=""container"" style=""border: 1px solid #D5DBDB"">
                                    <div class=""row"">
                                        <div class=""col-md-12 text-center"" style=""background-color: #EAEDED"">
                                            <img");
            EndContext();
            BeginWriteAttribute("src", " src=\"", 8292, "\"", 8309, 1);
#line 135 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue("", 8298, prod.Image, 8298, 11, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(8310, 364, true);
            WriteLiteral(@" style=""height: 110px;"" />
                                        </div>
                                    </div>
                                    <div class=""row p-3"">
                                        <div class=""col-md-8"">
                                            <div class=""col-md-12"">
                                                <h5>");
            EndContext();
            BeginContext(8675, 9, false);
#line 141 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                               Write(prod.Name);

#line default
#line hidden
            EndContext();
            BeginContext(8684, 176, true);
            WriteLiteral("</h5>\r\n                                            </div>\r\n                                            <div class=\"col-md-12\">\r\n                                                ");
            EndContext();
            BeginContext(8860, 54, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "84945ad8b4b44ec6b38bc19ec1b1480a", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8914, 72, true);
            WriteLiteral("<span style=\"font-size: 18px;vertical-align: middle; margin-left: 4px;\">");
            EndContext();
            BeginContext(8987, 15, false);
#line 144 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                                                                                                                                                         Write(prod.PriceCoins);

#line default
#line hidden
            EndContext();
            BeginContext(9002, 206, true);
            WriteLiteral(" coins</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-4 text-center center-content\">\r\n");
            EndContext();
#line 148 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                             if (User.Identity.IsAuthenticated)
                                            {

#line default
#line hidden
            BeginContext(9336, 147, true);
            WriteLiteral("                                                <button type=\"button\" class=\"btn btn-success btnBuy\" style=\"border-radius: 50%;padding: 12px 24px;\"");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 9483, "\"", 9574, 11);
            WriteAttributeValue("", 9493, "BuyAvatar(\'", 9493, 11, true);
#line 150 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue("", 9504, prod.Id, 9504, 8, false);

#line default
#line hidden
            WriteAttributeValue("", 9512, "\',\'", 9512, 3, true);
#line 150 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue("", 9515, prod.Image, 9515, 11, false);

#line default
#line hidden
            WriteAttributeValue("", 9526, "\',\'", 9526, 3, true);
#line 150 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue("", 9529, prod.Name, 9529, 10, false);

#line default
#line hidden
            WriteAttributeValue("", 9539, "\',", 9539, 2, true);
#line 150 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue("", 9541, prod.PriceCoins, 9541, 16, false);

#line default
#line hidden
            WriteAttributeValue("", 9557, ",", 9557, 1, true);
#line 150 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue(" ", 9558, prod.PriceUSD, 9559, 14, false);

#line default
#line hidden
            WriteAttributeValue("", 9573, ")", 9573, 1, true);
            EndWriteAttribute();
            BeginContext(9575, 65, true);
            WriteLiteral(" data-toggle=\"modal\" data-target=\"#purchase-modal\">Buy</button>\r\n");
            EndContext();
#line 151 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                            }
                                            else
                                            {

#line default
#line hidden
            BeginContext(9784, 200, true);
            WriteLiteral("                                                <button type=\"button\" class=\"btn btn-success btnBuy\" style=\"border-radius: 50%;padding: 12px 24px;\" onclick=\"RequireLogin(\'you account\')\">Buy</button>\r\n");
            EndContext();
#line 155 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                            }

#line default
#line hidden
            BeginContext(10031, 168, true);
            WriteLiteral("                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n");
            EndContext();
#line 160 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                        }

#line default
#line hidden
            BeginContext(10226, 303, true);
            WriteLiteral(@"                    </div>

                    <div class=""row"">
                        <div class=""col-md-12"">
                            <h2 style=""color: #7F8C8D"">Subscriptions</h2>
                        </div>
                    </div>
                    <div class=""row no-gutters"">
");
            EndContext();
#line 169 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                         foreach (var prod in Model.Where(x => x.PurchaseType == PurchaseType.Subscription))
                        {

#line default
#line hidden
            BeginContext(10666, 199, true);
            WriteLiteral("                            <div class=\"col-12 col-md-6 col-lg-4\">\r\n                                <!-- Package Price  -->\r\n                                <div class=\"single-price-plan text-center\"");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 10865, "\"", 10907, 3);
            WriteAttributeValue("", 10875, "SelectPackage(this,", 10875, 19, true);
#line 173 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue(" ", 10894, pkgCounter, 10895, 11, false);

#line default
#line hidden
            WriteAttributeValue("", 10906, ")", 10906, 1, true);
            EndWriteAttribute();
            BeginContext(10908, 171, true);
            WriteLiteral(">\r\n                                    <!-- Package Text  -->\r\n                                    <div class=\"package-plan\">\r\n                                        <h5>");
            EndContext();
            BeginContext(11080, 9, false);
#line 176 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                       Write(prod.Name);

#line default
#line hidden
            EndContext();
            BeginContext(11089, 209, true);
            WriteLiteral("</h5>\r\n                                        <div class=\"ca-price d-flex justify-content-center\">\r\n                                            <span>$</span>\r\n                                            <h4>");
            EndContext();
            BeginContext(11299, 13, false);
#line 179 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                           Write(prod.PriceUSD);

#line default
#line hidden
            EndContext();
            BeginContext(11312, 213, true);
            WriteLiteral("</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"package-description\">\r\n                                        <p>");
            EndContext();
            BeginContext(11526, 27, false);
#line 183 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                      Write(prod.ProductType.ToString());

#line default
#line hidden
            EndContext();
            BeginContext(11553, 535, true);
            WriteLiteral(@"</p>
                                        <p>-----</p>
                                        <p>-----</p>
                                        <p>-----</p>
                                        <p>-----</p>
                                    </div>
                                    <!-- Subscription Button  -->
                                    <div class=""plan-button"">
                                        <a class=""btnSelect"" href=""#"">Select Subscription</a>
                                        <div");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 12088, "\"", 12128, 2);
            WriteAttributeValue("", 12093, "paypal-button-container-", 12093, 24, true);
#line 192 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue("", 12117, pkgCounter, 12117, 11, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(12129, 152, true);
            WriteLiteral(" class=\"btnPaypal hide\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n");
            EndContext();
#line 196 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                            pkgCounter += 1;
                        }

#line default
#line hidden
            BeginContext(12354, 301, true);
            WriteLiteral(@"
                    </div>

                    <div class=""row"">
                        <div class=""col-md-12"">
                            <h2 style=""color: #7F8C8D"">Tok Blitz</h2>
                        </div>
                    </div>
                    <div class=""row no-gutters"">
");
            EndContext();
#line 207 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                         foreach (var prod in Model.Where(x => x.PurchaseType != PurchaseType.Subscription && x.ProductType != ProductType.Avatars))
                        {

#line default
#line hidden
            BeginContext(12832, 199, true);
            WriteLiteral("                            <div class=\"col-12 col-md-6 col-lg-4\">\r\n                                <!-- Package Price  -->\r\n                                <div class=\"single-price-plan text-center\"");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 13031, "\"", 13073, 3);
            WriteAttributeValue("", 13041, "SelectPackage(this,", 13041, 19, true);
#line 211 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue(" ", 13060, pkgCounter, 13061, 11, false);

#line default
#line hidden
            WriteAttributeValue("", 13072, ")", 13072, 1, true);
            EndWriteAttribute();
            BeginContext(13074, 171, true);
            WriteLiteral(">\r\n                                    <!-- Package Text  -->\r\n                                    <div class=\"package-plan\">\r\n                                        <h5>");
            EndContext();
            BeginContext(13246, 9, false);
#line 214 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                       Write(prod.Name);

#line default
#line hidden
            EndContext();
            BeginContext(13255, 209, true);
            WriteLiteral("</h5>\r\n                                        <div class=\"ca-price d-flex justify-content-center\">\r\n                                            <span>$</span>\r\n                                            <h4>");
            EndContext();
            BeginContext(13465, 13, false);
#line 217 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                           Write(prod.PriceUSD);

#line default
#line hidden
            EndContext();
            BeginContext(13478, 213, true);
            WriteLiteral("</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"package-description\">\r\n                                        <p>");
            EndContext();
            BeginContext(13692, 27, false);
#line 221 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                      Write(prod.ProductType.ToString());

#line default
#line hidden
            EndContext();
            BeginContext(13719, 49, true);
            WriteLiteral("</p>\r\n                                        <p>");
            EndContext();
            BeginContext(13769, 13, false);
#line 222 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                      Write(prod.Quantity);

#line default
#line hidden
            EndContext();
            BeginContext(13782, 1, true);
            WriteLiteral(" ");
            EndContext();
            BeginContext(13784, 28, false);
#line 222 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                                     Write(prod.PurchaseType.ToString());

#line default
#line hidden
            EndContext();
            BeginContext(13812, 481, true);
            WriteLiteral(@"</p>
                                        <p>-----</p>
                                        <p>-----</p>
                                        <p>-----</p>
                                    </div>
                                    <!-- Subscription Button  -->
                                    <div class=""plan-button"">
                                        <a class=""btnSelect"" href=""#"">Select Subscription</a>
                                        <div");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 14293, "\"", 14333, 2);
            WriteAttributeValue("", 14298, "paypal-button-container-", 14298, 24, true);
#line 230 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
WriteAttributeValue("", 14322, pkgCounter, 14322, 11, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(14334, 40, true);
            WriteLiteral(" class=\"btnPaypal hide\" data-productId=\"");
            EndContext();
            BeginContext(14375, 7, false);
#line 230 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                                                                                                        Write(prod.Id);

#line default
#line hidden
            EndContext();
            BeginContext(14382, 130, true);
            WriteLiteral("\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n");
            EndContext();
#line 235 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                             if (User.Identity.IsAuthenticated)
                            {

#line default
#line hidden
            BeginContext(14610, 261, true);
            WriteLiteral(@"                                <script>
                                    paypal.Buttons({
                                        createOrder: function (data, actions) {
                                            return fetch('/Payment/Paypal?productId=");
            EndContext();
            BeginContext(14872, 7, false);
#line 240 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                                                               Write(prod.Id);

#line default
#line hidden
            EndContext();
            BeginContext(14879, 2008, true);
            WriteLiteral(@"', {
                                                method: 'get'
                                            }).then(function (res) {
                                                // console.log(res);
                                                return res.json();
                                            }).then(function (data) {
                                                return data.id;
                                            });
                                        },
                                        onApprove: function (data, actions) {
                                            $("".tokkepedia-loading"").show();
                                            isProcessing = true;

                                            return actions.order.capture().then(function (details) {
                                                //alert('Transaction completed by ' + JSON.stringify(details));
                                                // Call your server to save th");
            WriteLiteral(@"e transaction
                                                var response = fetch('/Payment/Complete', {
                                                    method: 'post',
                                                    headers: {
                                                        'content-type': 'application/json'
                                                    },
                                                    body: JSON.stringify(details)
                                                });
                                                //console.log(response);

                                                $("".tokkepedia-loading"").hide;
                                                isProcessing = false;

                                                return response;
                                            });
                                        }
                                    }).render('#paypal-button-container-");
            EndContext();
            BeginContext(16888, 10, false);
#line 271 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                                                                   Write(pkgCounter);

#line default
#line hidden
            EndContext();
            BeginContext(16898, 48, true);
            WriteLiteral("\');\r\n                                </script>\r\n");
            EndContext();
#line 273 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                            }

#line default
#line hidden
#line 273 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
                             

                            pkgCounter += 1;
                        }

#line default
#line hidden
            BeginContext(17052, 969, true);
            WriteLiteral(@"
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--Purchase Modal -->
    <div class=""modal fade purchaseModal"" id=""purchase-modal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""purchase-title"" aria-hidden=""true"">
        <div class=""modal-dialog modal-lg modal-dialog-centered"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""purchase-title"">Purchase Details</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <table class=""table"" style=""width: 100%s"">
                        <tbody>
                            <tr>
                                <td width=""96"">");
            EndContext();
            BeginContext(18021, 69, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "edd6c93c8e7344ae917569643b0a180b", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(18090, 555, true);
            WriteLiteral(@"</td>
                                <td style=""vertical-align: middle;""><h4 id=""txtName"" style=""margin-bottom: 0px;""></h4></td>
                                <td style=""vertical-align: middle;"" width=""128""><input type=""radio"" name=""rdoAmountType"" /><i class=""fas fa-dollar-sign"" style=""font-size: 24px;color: #28B463""></i><span style=""font-size: 16px;vertical-align: middle; margin-left: 4px;"" id=""txtPriceUSD"">0</span></td>
                                <td style=""vertical-align: middle;"" width=""128""><input type=""radio"" name=""rdoAmountType"" />");
            EndContext();
            BeginContext(18645, 54, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "76ffd0233cfd43009f4401e0d716bc7d", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(18699, 834, true);
            WriteLiteral(@"<span style=""font-size: 16px;vertical-align: middle; margin-left: 4px;"" id=""txtPriceCoins"">0 coins</span></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cancel</button>
                    <button id=""btnPurchase"" type=""button"" data-dismiss=""modal"" class=""btn btn-primary"" data-avatarid=""0"" data-stickerid=""0"" data-type=""0"">Confirm Purchase</button>
                </div>
            </div>
        </div>
    </div>
</section>

<div class=""tokkepedia-loading"" style=""display: none;"">
    <h2 class=""text-white"" style=""display: block; left: 50%; top: 50%; position: absolute"">Processing . . .</h2>
</div>

");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(19551, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 320 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
     if (User.Identity.IsAuthenticated)
    {

#line default
#line hidden
                BeginContext(19601, 8630, true);
                WriteLiteral(@"        <script>
            paypal.Buttons({
                createOrder: function (data, actions) {
                    return fetch('/Payment/Paypal?productId=subscription_1', {
                        method: 'get'
                    }).then(function (res) {
                        return res.json();
                    }).then(function (data) {
                        return data.id;
                    });
                },
                onApprove: function (data, actions) {
                    $("".tokkepedia-loading"").show();
                    isProcessing = true;

                    return actions.order.capture().then(function (details) {
                        //alert('Transaction completed by ' + JSON.stringify(details));
                        // Call your server to save the transaction
                        var response = fetch('/Payment/Complete', {
                            method: 'post',
                            headers: {
                                'c");
                WriteLiteral(@"ontent-type': 'application/json'
                            },
                            body: JSON.stringify(details)
                        });
                        //console.log(response);

                        $("".tokkepedia-loading"").hide();
                        isProcessing = false;

                        return response;
                    });
                }
            }).render('#paypal-button-container-1');

            paypal.Buttons({
                createOrder: function (data, actions) {
                    return fetch('/Payment/Paypal?productId=subscription_2', {
                        method: 'get'
                    }).then(function (res) {
                        return res.json();
                    }).then(function (data) {
                        return data.id;
                    });
                },
                onApprove: function (data, actions) {
                    return actions.order.capture().then(function (details) {
       ");
                WriteLiteral(@"                 $("".tokkepedia-loading"").show();
                        isProcessing = true;

                        return actions.order.capture().then(function (details) {
                            //alert('Transaction completed by ' + JSON.stringify(details));
                            // Call your server to save the transaction
                            var response = fetch('/Payment/Complete', {
                                method: 'post',
                                headers: {
                                    'content-type': 'application/json'
                                },
                                body: JSON.stringify(details)
                            });
                            //console.log(response);

                            $("".tokkepedia-loading"").hide();
                            isProcessing = false;

                            return response;
                        });
                    });
                }
            }).re");
                WriteLiteral(@"nder('#paypal-button-container-2');

            paypal.Buttons({
                createOrder: function (data, actions) {
                    return fetch('/Payment/Paypal?productId=subscription_3', {
                        method: 'get'
                    }).then(function (res) {
                        return res.json();
                    }).then(function (data) {
                        return data.id;
                    });
                },
                onApprove: function (data, actions) {
                    return actions.order.capture().then(function (details) {
                        $("".tokkepedia-loading"").show();
                        isProcessing = true;

                        return actions.order.capture().then(function (details) {
                            //alert('Transaction completed by ' + JSON.stringify(details));
                            // Call your server to save the transaction
                            var response = fetch('/Payment/Complete',");
                WriteLiteral(@" {
                                method: 'post',
                                headers: {
                                    'content-type': 'application/json'
                                },
                                body: JSON.stringify(details)
                            });
                            //console.log(response);

                            $("".tokkepedia-loading"").hide();
                            isProcessing = false;

                            return response;
                        });
                    });
                }
            }).render('#paypal-button-container-3');

            $(""#btnPurchase"").click(function () {
                var avatarId = $(this).attr(""data-avatarid"");
                var stickerId = $(this).attr(""data-stickerid"");
                var type = $(this).attr(""data-type"");

                switch (type) {
                    case 0: // Avatar
                        if (avatarId != 0) {
                       ");
                WriteLiteral(@"     var opt = {};
                            opt.url = ""Payment/BuyAvatar"";
                            opt.type = ""POST"";
                            opt.data = { avatarId: avatarId };
                            opt.async = true;
                            opt.success = function (htmlData) {
                                // Success
                            };
                            opt.error = function () {
                                //$(""#containerProgress"").hide();
                            };
                            opt.beforeSend = function () {
                                //$(""#containerProgress"").show();
                                $(this).attr(""disabled"", true);
                            };
                            opt.complete = function () {
                                //$(""#containerProgress"").hide();
                            };
                            $.ajax(opt);
                        }
                        else {
        ");
                WriteLiteral(@"                    // No avatar selected
                        }
                        break;
                    case 1: // Sticker
                        if (stickerId != 0) {
                            var opt = {};
                            opt.url = ""Payment/BuySticker"";
                            opt.type = ""POST"";
                            opt.data = { stickerId: stickerId };
                            opt.async = true;
                            opt.success = function (htmlData) {
                                // Success
                                console.log(htmlData);
                                location.reload();
                            };
                            opt.error = function () {
                                //$(""#containerProgress"").hide();
                            };
                            opt.beforeSend = function () {
                                //$(""#containerProgress"").show();
                                $(this).");
                WriteLiteral(@"attr(""disabled"", true);
                            };
                            opt.complete = function () {
                                //$(""#containerProgress"").hide();
                            };
                            $.ajax(opt);
                        }
                        else {
                            // No avatar selected
                        }
                        break;
                }
            });

            function BuyAvatar(avatarId = '', avatarImage = '', avatarName = '', avatarCoins = 0, avatarUSD = 0) {
                $(""#btnPurchase"").attr(""data-avatarid"", avatarId);
                $(""#btnPurchase"").attr(""data-type"", 0);
                $(""#imgAvatar"").attr(""src"", avatarImage);
                $(""#txtName"").text(avatarName);
                $(""#txtPriceCoins"").text(avatarCoins + "" coins"");
                $(""#txtPriceUSD"").text(avatarUSD);
            }

            function BuySticker(stickerId = '', stickerImage = '', stickerNa");
                WriteLiteral(@"me = '', stickerCoins = 0, stickerUSD = 0) {
                $(""#btnPurchase"").attr(""data-stickerid"", stickerId);
                $(""#btnPurchase"").attr(""data-type"", 1);
                $(""#imgAvatar"").attr(""src"", stickerImage);
                $(""#txtName"").text(stickerName);
                $(""#txtPriceCoins"").text(stickerCoins + "" coins"");
                $(""#txtPriceUSD"").text(stickerUSD);
            }
        </script>
");
                EndContext();
#line 510 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
    }

#line default
#line hidden
                BeginContext(28238, 529, true);
                WriteLiteral(@"
    <script>
    var selectedPackageType = 3;
    var isProcessing = false;

        function SelectPackage(pkg, pkgType) {
            $("".single-price-plan"").removeClass(""active"");

            $(pkg).addClass(""active"");
            selectedPackageType = pkgType;

            $("".btnPaypal"").addClass(""hide"");
            $("".btnSelect"").removeClass(""hide"");

            $(pkg).find("".btnSelect"").addClass(""hide"");
            $(""#paypal-button-container-"" + pkgType).removeClass(""hide"");

            if ('");
                EndContext();
                BeginContext(28768, 29, false);
#line 528 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Home\Shop.cshtml"
            Write(User.Identity.IsAuthenticated);

#line default
#line hidden
                EndContext();
                BeginContext(28797, 443, true);
                WriteLiteral(@"' === 'False')
            {
                location.href = ""/login?returnUrl=/shop"";
            }
        }

    $(document).ready(function () {
        window.onbeforeunload = function () {
            if (isProcessing) {
                return ""Are you sure you want to leave the page? you have unsaved changes."";
                } else {
                    return;
                }
            };
    });
    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IOptions<PaypalSettingsViewModel> paypalSettings { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<PurchaseModel>> Html { get; private set; }
    }
}
#pragma warning restore 1591
