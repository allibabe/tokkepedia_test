#pragma checksum "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "65ce0075c7a5d1de1f63bc958a341aecb193113d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Set_SetToks), @"mvc.1.0.view", @"/Views/Set/SetToks.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Set/SetToks.cshtml", typeof(AspNetCore.Views_Set_SetToks))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\_ViewImports.cshtml"
using Tokkepedia;

#line default
#line hidden
#line 2 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\_ViewImports.cshtml"
using Tokkepedia.Models;

#line default
#line hidden
#line 3 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\_ViewImports.cshtml"
using Tokkepedia.Models.ViewModels;

#line default
#line hidden
#line 2 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
using System.Drawing;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"65ce0075c7a5d1de1f63bc958a341aecb193113d", @"/Views/Set/SetToks.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ba46829bbb239bf192093e3fc0bf62e1c59ba7bf", @"/Views/_ViewImports.cshtml")]
    public class Views_Set_SetToks : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<SetViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/tokcards.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("btnPlayCards"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "PlayToks", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Set", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width: 100%;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/tokmatch.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "TokMatch", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Tok", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-route-type", "8", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/tokkepedia.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/SetFeed.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/common.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jquery.flip.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(45, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 4 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
  
    // Calculate Image Size
    int width = 0;
    int height = 0;

    if (!string.IsNullOrEmpty(Model.CurrentSet.Image))
    {
        System.Net.WebRequest request =  System.Net.WebRequest.Create(Model.CurrentSet.Image);
        System.Net.WebResponse response = request.GetResponse();
        System.IO.Stream responseStream = response.GetResponseStream();
        Bitmap bmp = new Bitmap(responseStream);

        width = bmp.Width;
        height = bmp.Height;
        if (bmp.Width > 600) { width = bmp.Width - (int)(bmp.Width * 0.80); }
        if (bmp.Width > 250) { width = bmp.Width - (int)(bmp.Width * 0.40); }

        if (bmp.Height > 600) { height = bmp.Height - (int)(bmp.Height * 0.80); }
        if (bmp.Height > 250) { height = bmp.Height - (int)(bmp.Height * 0.40); }
    }

#line default
#line hidden
            BeginContext(867, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Meta", async() => {
                BeginContext(884, 145, true);
                WriteLiteral("\r\n    <meta property=\"fb:app_id\" content=\"2096904330562973\" />\r\n    <meta name=\"twitter:card\" content=\"summary\" />\r\n    <meta name=\"twitter:site\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 1029, "\"", 1051, 2);
                WriteAttributeValue("", 1039, "@", 1039, 1, true);
                WriteAttributeValue("", 1041, "tokkepedia", 1041, 10, true);
                EndWriteAttribute();
                BeginContext(1052, 32, true);
                WriteLiteral(" />\r\n    <meta property=\"og:url\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 1084, "\"", 1204, 1);
#line 30 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
WriteAttributeValue("", 1094, $"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.PathBase}/set?id={Model.CurrentSet.Id}", 1094, 110, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(1205, 85, true);
                WriteLiteral(" />\r\n    <meta property=\"og:type\" content=\"website\" />\r\n    <meta property=\"og:title\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 1290, "\"", 1339, 4);
#line 32 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
WriteAttributeValue("", 1300, Model.CurrentSet.Name, 1300, 22, false);

#line default
#line hidden
                WriteAttributeValue(" ", 1322, "|", 1323, 2, true);
                WriteAttributeValue(" ", 1324, "Tokkepedia", 1325, 11, true);
                WriteAttributeValue(" ", 1335, "Set", 1336, 4, true);
                EndWriteAttribute();
                BeginContext(1340, 40, true);
                WriteLiteral(" />\r\n    <meta property=\"og:description\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 1380, "\"", 1419, 1);
#line 33 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
WriteAttributeValue("", 1390, Model.CurrentSet.Description, 1390, 29, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(1420, 34, true);
                WriteLiteral(" />\r\n    <meta property=\"og:image\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 1454, "\"", 1552, 1);
#line 34 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
WriteAttributeValue("", 1464, !string.IsNullOrEmpty(Model.CurrentSet.Image) ? Model.CurrentSet.Image : string.Empty, 1464, 88, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(1553, 38, true);
                WriteLiteral(" />\r\n    <meta property=\"og:image:alt\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 1591, "\"", 1623, 1);
#line 35 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
WriteAttributeValue("", 1601, Model.CurrentSet.Name, 1601, 22, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(1624, 41, true);
                WriteLiteral(" />\r\n    <meta property=\"og:image:height\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 1665, "\"", 1682, 1);
#line 36 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
WriteAttributeValue("", 1675, height, 1675, 7, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(1683, 40, true);
                WriteLiteral(" />\r\n    <meta property=\"og:image:width\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 1723, "\"", 1739, 1);
#line 37 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
WriteAttributeValue("", 1733, width, 1733, 6, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(1740, 5, true);
                WriteLiteral(" />\r\n");
                EndContext();
            }
            );
            BeginContext(1748, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 40 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
  
    ViewData["Title"] = "Set Toks";
    Layout = "~/Views/Shared/_LayoutPublic.cshtml";

#line default
#line hidden
            BeginContext(1847, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Styles", async() => {
                BeginContext(1866, 2, true);
                WriteLiteral("\r\n");
                EndContext();
            }
            );
            BeginContext(1932, 592, true);
            WriteLiteral(@"
<!-- **** BACKGROUND !Important **** -->
<section class=""tokkepedia-main clearfix"">
    <div class=""tokkepdia-sub"">
    </div>
</section>
<!-- **** /BACKGROUND **** -->

<section class=""special-area bg-white"">
    <div class=""container h-100"">
        <div class=""row h-100"">
            <div class=""col-12 col-md"">
                <div class=""col-12 col-md header-spacing"" id=""pageContainer"" style=""padding-left: 0px; padding-right: 0px;"">
                    <br />
                    <div class=""row overview"">
                        <div class=""col-sm-12 text-center"">
");
            EndContext();
#line 64 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
                             if (!string.IsNullOrEmpty(Model.CurrentSet.Image))
                            {

#line default
#line hidden
            BeginContext(2636, 59, true);
            WriteLiteral("                                <img class=\"rounded-corner\"");
            EndContext();
            BeginWriteAttribute("src", " src=\"", 2695, "\"", 2724, 1);
#line 66 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
WriteAttributeValue("", 2701, Model.CurrentSet.Image, 2701, 23, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2725, 5, true);
            WriteLiteral(" />\r\n");
            EndContext();
#line 67 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
                            }

#line default
#line hidden
            BeginContext(2761, 32, true);
            WriteLiteral("                            <h1>");
            EndContext();
            BeginContext(2794, 21, false);
#line 68 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
                           Write(Model.CurrentSet.Name);

#line default
#line hidden
            EndContext();
            BeginContext(2815, 49, true);
            WriteLiteral("</h1>\r\n                            <p>Tok Group: ");
            EndContext();
            BeginContext(2865, 25, false);
#line 69 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
                                     Write(Model.CurrentSet.TokGroup);

#line default
#line hidden
            EndContext();
            BeginContext(2890, 16, true);
            WriteLiteral("<br />Tok Type: ");
            EndContext();
            BeginContext(2907, 24, false);
#line 69 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
                                                                               Write(Model.CurrentSet.TokType);

#line default
#line hidden
            EndContext();
            BeginContext(2931, 50, true);
            WriteLiteral("</p>\r\n                            <p class=\"lead\">");
            EndContext();
            BeginContext(2982, 28, false);
#line 70 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
                                       Write(Model.CurrentSet.Description);

#line default
#line hidden
            EndContext();
            BeginContext(3010, 261, true);
            WriteLiteral(@"</p>
                        </div>
                    </div>

                    <div class=""row overview"">
                        <div class=""col-md-12 user-pad text-center"">
                            <h3>TOKS</h3>
                            <h4>");
            EndContext();
            BeginContext(3273, 35, false);
#line 77 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
                            Write(Model.CurrentSet.TokIds?.Count ?? 0);

#line default
#line hidden
            EndContext();
            BeginContext(3309, 238, true);
            WriteLiteral("</h4>\r\n\r\n                            <div class=\"col-md-6\" style=\"margin: 0px auto;\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-6\">\r\n                                        ");
            EndContext();
            BeginContext(3547, 160, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cece8db6d5c44e8eac1b7b2fb87bdc0c", async() => {
                BeginContext(3668, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "1cda043fa4da4c899a7c267607601f36", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            if (__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues == null)
            {
                throw new InvalidOperationException(InvalidTagHelperIndexerAssignment("asp-route-id", "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper", "RouteValues"));
            }
            BeginWriteTagHelperAttribute();
#line 82 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
                                                                                                          WriteLiteral(Model.CurrentSet.Id);

#line default
#line hidden
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"] = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-route-id", __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"], global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3707, 146, true);
            WriteLiteral("\r\n                                    </div>\r\n                                    <div class=\"col-md-6\">\r\n                                        ");
            EndContext();
            BeginContext(3853, 179, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e7e15cb9bbff40b9ac3a7497389b4ba0", async() => {
                BeginContext(3993, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "3d125233332c4e6d999e57890eab3909", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_6.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
            if (__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues == null)
            {
                throw new InvalidOperationException(InvalidTagHelperIndexerAssignment("asp-route-id", "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper", "RouteValues"));
            }
            BeginWriteTagHelperAttribute();
#line 85 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
                                                                                                          WriteLiteral(Model.CurrentSet.Id);

#line default
#line hidden
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"] = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-route-id", __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"], global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            if (__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues == null)
            {
                throw new InvalidOperationException(InvalidTagHelperIndexerAssignment("asp-route-type", "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper", "RouteValues"));
            }
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["type"] = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4032, 2004, true);
            WriteLiteral(@"
                                    </div>
                                </div>
                            </div>

                            <a class=""btn btn-danger float-right"" style=""color: white; margin-left: 4px;"" data-toggle=""modal"" data-target=""#removeTokModal"" id=""btnRemoveToksModal"">- Remove Toks</a>
                            <a class=""btn btn-primary float-right"" style=""color: white;"" data-toggle=""modal"" data-target=""#addTokModal"" id=""btnAddToksModal"">+ Add Toks</a>
                        </div>
                    </div>

                    <div class=""row"">

                        <!--/col-3-->
                        <div class=""col-sm-12"">

                            <ul class=""nav nav-tabs"" id=""myTab"">
                                <li class=""nav-item nav-link""><a href=""#home"" data-toggle=""tab"">Toks</a></li>
                                <li class=""nav-item nav-link""><a href=""#cards"" data-toggle=""tab"">Tok Cards</a></li>
                            </ul>

    ");
            WriteLiteral(@"                        <div class=""tab-content"">
                                <div class=""tab-pane active"" id=""home"">
                                    <input id=""IsLoadMore"" type=""hidden"" value=""yes"" />
                                    <input id=""LoadMoreFunction"" type=""hidden"" value=""GetSearchData"" />
                                    <input id=""ValSearchText"" type=""hidden"" value="""" />
                                    <input id=""TxtCategory"" type=""hidden"" value="""" />
                                    <input id=""CountryFilter"" type=""hidden"" value="""" />
                                    <input id=""TokTypeFilter"" type=""hidden"" value="""" />
                                    <input id=""TokTypeIdFilter"" type=""hidden"" value="""" />
                                    <input id=""UserIdFilter"" type=""hidden"" value="""" />
                                    <input id=""searchorder"" type=""hidden"" value=""newest"" />
                                    ");
            EndContext();
            BeginContext(6037, 58, false);
#line 116 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
                               Write(Html.HiddenFor(model => model.Token, new { id = "Token" }));

#line default
#line hidden
            EndContext();
            BeginContext(6095, 3393, true);
            WriteLiteral(@"
                                    <div class=""center containerProgress"" style=""margin: 24px auto"">
                                        <div class=""colorlib-load""></div>
                                    </div>
                                    <div id=""tokContainer"" style=""margin-top: 1em !important;"">
                                        <div class=""container"">
                                            <div id=""tokTileContainer"" class=""row"">

                                            </div>
                                            <div class=""row"">
                                                <div class=""col-md-12"">
                                                    <div class=""justify-content-center"" style=""align-content:center!important;"">
                                                        <div class=""justify-content-center tokProgress"" style=""display:none; height:200px; width:200px;""></div>
                                                    </div>
             ");
            WriteLiteral(@"                                   </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!--/tab-pane-->
                                <div class=""tab-pane active"" id=""cards"" style=""visibility: hidden;"">
                                    <div class=""center cardContainerProgress"" style=""margin: 24px auto"">
                                        <div class=""colorlib-load""></div>
                                    </div>
                                    <div id=""tokCardContainer"" class=""container"" style=""margin-top: 1em !important;"">
                                        <div class=""container"">
                                            <div id=""cardContainer"" class=""row"">

                                            </div>
                                            <div class=""row"">
                                     ");
            WriteLiteral(@"           <div class=""col-md-12"">
                                                    <div class=""justify-content-center"" style=""align-content:center!important;"">
                                                        <div class=""justify-content-center cardMoreProgress"" style=""display:none; height:200px; width:200px;""></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!--/tab-pane-->
                        </div>
                        <!--/tab-content-->

                    </div>
                </div>
                <!--Add to Set Modal -->
                <div class=""modal fade multiSelectModal"" id=""addTokModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""addTokModal-title""");
            WriteLiteral(@" aria-hidden=""true"">
                    <div class=""modal-dialog modal-dialog-centered addtosetdialog"" role=""document"">
                        <div class=""modal-content addtosetcontent"">
                            <div class=""modal-header"">
                                <h5 class=""modal-title"" id="""">Add Tok to ");
            EndContext();
            BeginContext(9489, 24, false);
#line 167 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
                                                                    Write(Model.CurrentSet.TokType);

#line default
#line hidden
            EndContext();
            BeginContext(9513, 380, true);
            WriteLiteral(@" Set</h5>
                                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                    <span aria-hidden=""true"">&times;</span>
                                </button>
                            </div>
                            <div class=""modal-body addtosetbody"">
                                <h6>");
            EndContext();
            BeginContext(9894, 21, false);
#line 173 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
                               Write(Model.CurrentSet.Name);

#line default
#line hidden
            EndContext();
            BeginContext(9915, 1901, true);
            WriteLiteral(@"</h6>
                                <hr />
                                Select a tok:
                                <br />

                                <div id=""divSelectionContainer"" class=""addtosetsetssection"">
                                    <div class=""list-group addtosetlistgroup"" id=""list-tab"" role=""tablist"">
                                        <input type=""hidden"" id="""" value="""" />
                                        <div class=""scrollsets"" style=""max-height: 200px; overflow: auto;"">

                                        </div>

                                        <div class=""center containerProgress"" style=""margin: 24px auto"">
                                            <div class=""colorlib-load""></div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class=""modal-footer addtosetbtngroup"">
                ");
            WriteLiteral(@"                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cancel</button>
                                <button type=""button"" class=""btn btn-primary addtosetbtn"" onclick=""AddToksToSet()"">Add to Set</button>
                            </div>
                        </div>
                    </div>
                </div>
                <!--Remove Toks from Set Modal -->
                <div class=""modal fade multiSelectModal"" id=""removeTokModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""addTokModal-title"" aria-hidden=""true"">
                    <div class=""modal-dialog modal-dialog-centered addtosetdialog"" role=""document"">
                        <div class=""modal-content addtosetcontent"">
                            <div class=""modal-header"">
                                <h5 class=""modal-title"" id="""">Remove Toks from ");
            EndContext();
            BeginContext(11817, 24, false);
#line 204 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
                                                                          Write(Model.CurrentSet.TokType);

#line default
#line hidden
            EndContext();
            BeginContext(11841, 380, true);
            WriteLiteral(@" Set</h5>
                                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                    <span aria-hidden=""true"">&times;</span>
                                </button>
                            </div>
                            <div class=""modal-body addtosetbody"">
                                <h6>");
            EndContext();
            BeginContext(12222, 21, false);
#line 210 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
                               Write(Model.CurrentSet.Name);

#line default
#line hidden
            EndContext();
            BeginContext(12243, 1420, true);
            WriteLiteral(@"</h6>
                                <hr />
                                Select a tok:
                                <br />

                                <div id=""divSelectionContainer_remove"" class=""addtosetsetssection"">
                                    <div class=""list-group addtosetlistgroup"" id=""list-tab"" role=""tablist"">
                                        <input type=""hidden"" id="""" value="""" />
                                        <div class=""scrollsets"">

                                        </div>

                                        <div class=""center containerProgress"" style=""margin: 24px auto"">
                                            <div class=""colorlib-load""></div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class=""modal-footer addtosetbtngroup"">
                                <button type=""button");
            WriteLiteral(@""" class=""btn btn-secondary"" data-dismiss=""modal"">Cancel</button>
                                <button type=""button"" class=""btn btn-primary addtosetbtn"" onclick=""RemoveToksFromSet()"">Remove from Set</button>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(13681, 104, true);
                WriteLiteral("\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/bodymovin/4.13.0/bodymovin.js\"></script>\r\n    ");
                EndContext();
                BeginContext(13785, 42, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5d2a0416ac341b8b7a9199f336f2cb9", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(13827, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(13833, 39, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bec8e741ee104890953ceac9c880ed06", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(13872, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(13878, 38, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "99d94ec18b0a4feda1102aa8991cbf92", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(13916, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(13922, 43, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a2bdcaf8dec4d619feb8380afdbd1d2", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(13965, 33, true);
                WriteLiteral("\r\n    <script>\r\n        setId = \'");
                EndContext();
                BeginContext(13999, 19, false);
#line 249 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
            Write(Model.CurrentSet.Id);

#line default
#line hidden
                EndContext();
                BeginContext(14018, 185, true);
                WriteLiteral("\';\r\n        isSetTokPage = true;\r\n        $(document).ready(function () {\r\n            LoadSetTokFeeds();\r\n            LoadSetTokFeeds(100, 0, true);\r\n            LoadSetToksByTokType(\'");
                EndContext();
                BeginContext(14204, 26, false);
#line 254 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
                             Write(Model.CurrentSet.TokTypeId);

#line default
#line hidden
                EndContext();
                BeginContext(14230, 616, true);
                WriteLiteral(@"');
            LoadSetToksListing(setId, $(""#divSelectionContainer_remove""));

            $(""#btnAddToksModal, #btnRemoveToksModal"").click(function () {
                enableMultipleSelection = true;
            });
            $("".multiSelectModal"").on(""hidden.bs.modal"", function () {
                enableMultipleSelection = false;
            });

            $('#divSelectionContainer').find("".scrollsets"").on('scroll', function () {
                let div = $(this).get(0);
                if (div.scrollTop + div.clientHeight >= div.scrollHeight) {
                    LoadSetToksByTokType('");
                EndContext();
                BeginContext(14847, 26, false);
#line 267 "C:\Users\bonqu\source\github\TokkepediaWeb\Tokkepedia\Views\Set\SetToks.cshtml"
                                     Write(Model.CurrentSet.TokTypeId);

#line default
#line hidden
                EndContext();
                BeginContext(14873, 3354, true);
                WriteLiteral(@"', $(""#txtToken"").val());
                }
            });

            //$('#divSelectionContainer_remove').find("".scrollsets"").on('scroll', function () {
            //    let div = $(this).get(0);
            //    if (div.scrollTop + div.clientHeight >= div.scrollHeight) {
            //        LoadSetToksListing(setId, $(""#divSelectionContainer_remove""), 5, stepAt);
            //    }
            //});
        });

        function AddToksToSet() {
            var selectedToks = [];
            $(""#divSelectionContainer"").find("".scrollsets"").find("".tokView"").each(function () {
                var e = $(this);
                var tokId = $(e).attr(""data-tokid"");
                if (e.find("".list-group-item-action"").hasClass(""selected"")) {
                    selectedToks.push(tokId);
                }
            });

            if (selectedToks.length > 0) {
                $.ajax({
                    url: ""/Set/AddToksToSet"",
                    type: ""POST"",
              ");
                WriteLiteral(@"      data: { setId: setId, tokIds: selectedToks },
                    dataType: ""json"",
                    async: true,
                    success: function (res) {
                        switch (res.resultEnum) {
                            case 1: // Success
                                window.location.reload();
                                break;
                            case 2: // Failed
                                swal(""Error"", res.resultMessage, ""error"")
                                break;
                        }
                    },
                    error: function () {
                        // Error here..
                    }
                });
            }
            else {
                swal(""Warning"", ""Please select at least 1 tok."", ""warning"");
            }
        }

        function RemoveToksFromSet() {
            var selectedToks = [];
            $(""#divSelectionContainer_remove"").find("".scrollsets"").find("".tokView"").each(functio");
                WriteLiteral(@"n () {
                var e = $(this);
                var tokId = $(e).attr(""data-tokid"");
                if (e.find("".list-group-item-action"").hasClass(""selected"")) {
                    selectedToks.push(tokId);
                }
            });

            if (selectedToks.length > 0) {
                $.ajax({
                    url: ""/Set/RemoveToksFromSet"",
                    type: ""DELETE"",
                    data: { setId: setId, tokIds: selectedToks },
                    dataType: ""json"",
                    async: true,
                    success: function (res) {
                        switch (res.resultEnum) {
                            case 1: // Success
                                RemoveToksFromList(selectedToks);
                                break;
                            case 2: // Failed
                                swal(""Error"", res.resultMessage, ""error"")
                                break;
                        }
                    },");
                WriteLiteral(@"
                    error: function () {
                        // Error here..
                    }
                });
            }
            else {
                swal(""Warning"", ""Please select at least 1 tok."", ""warning"");
            }
        }
    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<SetViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
