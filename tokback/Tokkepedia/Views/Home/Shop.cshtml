@model List<PurchaseModel>
@using Microsoft.Extensions.Options
@inject IOptions<PaypalSettingsViewModel> paypalSettings

@{
    ViewData["Title"] = "Shop";
    Layout = "~/Views/Shared/_LayoutPublic.cshtml";

    var pkgCounter = 1;
    List<Sticker> stickers = ViewBag.Stickers ?? new List<Sticker>();
}

@section Meta {
    <script src="https://www.paypal.com/sdk/js?client-id=@paypalSettings.Value.ClientId">
    </script>
}

<!-- **** BACKGROUND !Important **** -->
<section class="tokkepedia-main clearfix">
    <div class="tokkepdia-sub">
    </div>
</section>
<!-- **** /BACKGROUND **** -->

<section class="special-area bg-white" id="shop">
    <div class="container h-100">
        <div class="row h-100">
            <div class="col-12 col-md header-spacing">
                <div class="container">
                    <div class="row">
                        <div class="col-12">
                            <!-- Heading Text  -->
                            <div class="section-heading text-center">
                                <h2>Shop (coming soon)</h2>
                                <div class="line-shape"></div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <h2 style="color: #7F8C8D; float: left;">Avatars</h2>
                            <h4 style="position: absolute; right: 0; bottom: 0; margin-right: 24px;"><a href="/avatars" style="color: #9B59B6;">View All <i class="fas fa-arrow-circle-right"></i></a></h4>
                        </div>
                    </div>
                    <div class="row" style="margin-bottom: 16px;">
                        @foreach (var prod in Model.Where(x => x.ProductType == ProductType.Avatars).Take(3))
                        {
                            <div class="col-md-4">
                                <div class="container" style="border: 1px solid #D5DBDB">
                                    <div class="row">
                                        <div class="col-md-12 text-center" style="background-color: #EAEDED">
                                            <img src="@prod.Image" style="width: 256px;" />
                                        </div>
                                    </div>
                                    <div class="row p-3">
                                        <div class="col-md-8">
                                            <div class="col-md-12">
                                                <h5>@prod.Name</h5>
                                            </div>
                                            <div class="col-md-12">
                                                <img src="~/images/gold.gif" width="24" height="24" /><span style="font-size: 18px;vertical-align: middle; margin-left: 4px;">@prod.PriceCoins coins</span>
                                            </div>
                                        </div>
                                        <div class="col-md-4 text-center center-content">
                                            @if (User.Identity.IsAuthenticated)
                                            {
                                                <button type="button" class="btn btn-success btnBuy" style="border-radius: 50%;padding: 12px 24px;" onclick="BuyAvatar('@prod.Id','@prod.Image','@prod.Name',@prod.PriceCoins, @prod.PriceUSD)" data-toggle="modal" data-target="#purchase-modal">Buy</button>
                                            }
                                            else
                                            {
                                                <button type="button" class="btn btn-success btnBuy" style="border-radius: 50%;padding: 12px 24px;" onclick="RequireLogin('you account')">Buy</button>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <h2 style="color: #7F8C8D; float: left;">Stickers</h2>
                            <h4 style="position: absolute; right: 0; bottom: 0; margin-right: 24px;"><a href="/stickers" style="color: #9B59B6;">View All <i class="fas fa-arrow-circle-right"></i></a></h4>
                        </div>
                    </div>
                    <div class="row no-gutters" style="margin-bottom: 16px;">
                        @foreach (var prod in stickers.Take(5))
                        {
                            <div class="col" style="margin-right: 2px;">
                                <div class="container" style="border: 1px solid #D5DBDB;padding:2px;">
                                    <div class="row no-gutters">
                                        <div class="col-md-12 text-center" style="background-color: #EAEDED">
                                            <img src="@prod.Image" style="height: 48px;" />
                                        </div>
                                    </div>
                                    <div class="row no-gutters">
                                        <div class="col-md-8">
                                            <div class="col-md-12">
                                                <p style="white-space: nowrap; overflow: hidden; text-overflow: clip; margin-bottom: 0px;">@prod.Name</p>
                                            </div>
                                            <div class="col-md-12">
                                                <img src="~/images/gold.gif" width="24" height="24" /><span style="font-size: 14px;vertical-align: middle; margin-left: 4px;">@prod.PriceCoins coins</span>
                                            </div>
                                        </div>
                                        <div class="col-md-4 text-center center-content">
                                            @if (User.Identity.IsAuthenticated)
                                            {
                                                <button type="button" class="btn btn-success btnBuy" style="border-radius: 8px;padding: 6px 8px;" onclick="BuyAvatar('@prod.Id','@prod.Image','@prod.Name',@prod.PriceCoins, @prod.PriceUSD)" data-toggle="modal" data-target="#purchase-modal">Buy</button>
                                            }
                                            else
                                            {
                                                <button type="button" class="btn btn-success btnBuy" style="border-radius: 8px;padding: 6px 8px;" onclick="RequireLogin('you account')">Buy</button>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <h2 style="color: #7F8C8D; float: left;">Tokmojis</h2>
                            @*<h4 style="position: absolute; right: 0; bottom: 0; margin-right: 24px;"><a href="/avatars" style="color: #9B59B6;">View All <i class="fas fa-arrow-circle-right"></i></a></h4>*@
                        </div>
                    </div>
                    <div class="row" style="margin-bottom: 16px;">
                        @foreach (var prod in Model.Where(x => x.ProductType == ProductType.Tokmoji))
                        {
                            <div class="col-md-4">
                                <div class="container" style="border: 1px solid #D5DBDB">
                                    <div class="row">
                                        <div class="col-md-12 text-center" style="background-color: #EAEDED">
                                            <img src="@prod.Image" style="height: 110px;" />
                                        </div>
                                    </div>
                                    <div class="row p-3">
                                        <div class="col-md-8">
                                            <div class="col-md-12">
                                                <h5>@prod.Name</h5>
                                            </div>
                                            <div class="col-md-12">
                                                <img src="~/images/gold.gif" width="24" height="24" /><span style="font-size: 18px;vertical-align: middle; margin-left: 4px;">@prod.PriceCoins coins</span>
                                            </div>
                                        </div>
                                        <div class="col-md-4 text-center center-content">
                                            @if (User.Identity.IsAuthenticated)
                                            {
                                                <button type="button" class="btn btn-success btnBuy" style="border-radius: 50%;padding: 12px 24px;" onclick="BuyAvatar('@prod.Id','@prod.Image','@prod.Name',@prod.PriceCoins, @prod.PriceUSD)" data-toggle="modal" data-target="#purchase-modal">Buy</button>
                                            }
                                            else
                                            {
                                                <button type="button" class="btn btn-success btnBuy" style="border-radius: 50%;padding: 12px 24px;" onclick="RequireLogin('you account')">Buy</button>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <h2 style="color: #7F8C8D">Subscriptions</h2>
                        </div>
                    </div>
                    <div class="row no-gutters">
                        @foreach (var prod in Model.Where(x => x.PurchaseType == PurchaseType.Subscription))
                        {
                            <div class="col-12 col-md-6 col-lg-4">
                                <!-- Package Price  -->
                                <div class="single-price-plan text-center" onclick="SelectPackage(this, @pkgCounter)">
                                    <!-- Package Text  -->
                                    <div class="package-plan">
                                        <h5>@prod.Name</h5>
                                        <div class="ca-price d-flex justify-content-center">
                                            <span>$</span>
                                            <h4>@prod.PriceUSD</h4>
                                        </div>
                                    </div>
                                    <div class="package-description">
                                        <p>@prod.ProductType.ToString()</p>
                                        <p>-----</p>
                                        <p>-----</p>
                                        <p>-----</p>
                                        <p>-----</p>
                                    </div>
                                    <!-- Subscription Button  -->
                                    <div class="plan-button">
                                        <a class="btnSelect" href="#">Select Subscription</a>
                                        <div id="paypal-button-container-@pkgCounter" class="btnPaypal hide"></div>
                                    </div>
                                </div>
                            </div>
                            pkgCounter += 1;
                        }

                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <h2 style="color: #7F8C8D">Tok Blitz</h2>
                        </div>
                    </div>
                    <div class="row no-gutters">
                        @foreach (var prod in Model.Where(x => x.PurchaseType != PurchaseType.Subscription && x.ProductType != ProductType.Avatars))
                        {
                            <div class="col-12 col-md-6 col-lg-4">
                                <!-- Package Price  -->
                                <div class="single-price-plan text-center" onclick="SelectPackage(this, @pkgCounter)">
                                    <!-- Package Text  -->
                                    <div class="package-plan">
                                        <h5>@prod.Name</h5>
                                        <div class="ca-price d-flex justify-content-center">
                                            <span>$</span>
                                            <h4>@prod.PriceUSD</h4>
                                        </div>
                                    </div>
                                    <div class="package-description">
                                        <p>@prod.ProductType.ToString()</p>
                                        <p>@prod.Quantity @prod.PurchaseType.ToString()</p>
                                        <p>-----</p>
                                        <p>-----</p>
                                        <p>-----</p>
                                    </div>
                                    <!-- Subscription Button  -->
                                    <div class="plan-button">
                                        <a class="btnSelect" href="#">Select Subscription</a>
                                        <div id="paypal-button-container-@pkgCounter" class="btnPaypal hide" data-productId="@prod.Id"></div>
                                    </div>
                                </div>
                            </div>

                            @if (User.Identity.IsAuthenticated)
                            {
                                <script>
                                    paypal.Buttons({
                                        createOrder: function (data, actions) {
                                            return fetch('/Payment/Paypal?productId=@prod.Id', {
                                                method: 'get'
                                            }).then(function (res) {
                                                // console.log(res);
                                                return res.json();
                                            }).then(function (data) {
                                                return data.id;
                                            });
                                        },
                                        onApprove: function (data, actions) {
                                            $(".tokkepedia-loading").show();
                                            isProcessing = true;

                                            return actions.order.capture().then(function (details) {
                                                //alert('Transaction completed by ' + JSON.stringify(details));
                                                // Call your server to save the transaction
                                                var response = fetch('/Payment/Complete', {
                                                    method: 'post',
                                                    headers: {
                                                        'content-type': 'application/json'
                                                    },
                                                    body: JSON.stringify(details)
                                                });
                                                //console.log(response);

                                                $(".tokkepedia-loading").hide;
                                                isProcessing = false;

                                                return response;
                                            });
                                        }
                                    }).render('#paypal-button-container-@pkgCounter');
                                </script>
                            }

                            pkgCounter += 1;
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--Purchase Modal -->
    <div class="modal fade purchaseModal" id="purchase-modal" tabindex="-1" role="dialog" aria-labelledby="purchase-title" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="purchase-title">Purchase Details</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <table class="table" style="width: 100%s">
                        <tbody>
                            <tr>
                                <td width="96"><img id="imgAvatar" src="~/images/tokket.png" style="width: 96px;" /></td>
                                <td style="vertical-align: middle;"><h4 id="txtName" style="margin-bottom: 0px;"></h4></td>
                                <td style="vertical-align: middle;" width="128"><input type="radio" name="rdoAmountType" /><i class="fas fa-dollar-sign" style="font-size: 24px;color: #28B463"></i><span style="font-size: 16px;vertical-align: middle; margin-left: 4px;" id="txtPriceUSD">0</span></td>
                                <td style="vertical-align: middle;" width="128"><input type="radio" name="rdoAmountType" /><img src="~/images/gold.gif" width="24" height="24" /><span style="font-size: 16px;vertical-align: middle; margin-left: 4px;" id="txtPriceCoins">0 coins</span></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button id="btnPurchase" type="button" data-dismiss="modal" class="btn btn-primary" data-avatarid="0" data-stickerid="0" data-type="0">Confirm Purchase</button>
                </div>
            </div>
        </div>
    </div>
</section>

<div class="tokkepedia-loading" style="display: none;">
    <h2 class="text-white" style="display: block; left: 50%; top: 50%; position: absolute">Processing . . .</h2>
</div>

@section Scripts {
    @if (User.Identity.IsAuthenticated)
    {
        <script>
            paypal.Buttons({
                createOrder: function (data, actions) {
                    return fetch('/Payment/Paypal?productId=subscription_1', {
                        method: 'get'
                    }).then(function (res) {
                        return res.json();
                    }).then(function (data) {
                        return data.id;
                    });
                },
                onApprove: function (data, actions) {
                    $(".tokkepedia-loading").show();
                    isProcessing = true;

                    return actions.order.capture().then(function (details) {
                        //alert('Transaction completed by ' + JSON.stringify(details));
                        // Call your server to save the transaction
                        var response = fetch('/Payment/Complete', {
                            method: 'post',
                            headers: {
                                'content-type': 'application/json'
                            },
                            body: JSON.stringify(details)
                        });
                        //console.log(response);

                        $(".tokkepedia-loading").hide();
                        isProcessing = false;

                        return response;
                    });
                }
            }).render('#paypal-button-container-1');

            paypal.Buttons({
                createOrder: function (data, actions) {
                    return fetch('/Payment/Paypal?productId=subscription_2', {
                        method: 'get'
                    }).then(function (res) {
                        return res.json();
                    }).then(function (data) {
                        return data.id;
                    });
                },
                onApprove: function (data, actions) {
                    return actions.order.capture().then(function (details) {
                        $(".tokkepedia-loading").show();
                        isProcessing = true;

                        return actions.order.capture().then(function (details) {
                            //alert('Transaction completed by ' + JSON.stringify(details));
                            // Call your server to save the transaction
                            var response = fetch('/Payment/Complete', {
                                method: 'post',
                                headers: {
                                    'content-type': 'application/json'
                                },
                                body: JSON.stringify(details)
                            });
                            //console.log(response);

                            $(".tokkepedia-loading").hide();
                            isProcessing = false;

                            return response;
                        });
                    });
                }
            }).render('#paypal-button-container-2');

            paypal.Buttons({
                createOrder: function (data, actions) {
                    return fetch('/Payment/Paypal?productId=subscription_3', {
                        method: 'get'
                    }).then(function (res) {
                        return res.json();
                    }).then(function (data) {
                        return data.id;
                    });
                },
                onApprove: function (data, actions) {
                    return actions.order.capture().then(function (details) {
                        $(".tokkepedia-loading").show();
                        isProcessing = true;

                        return actions.order.capture().then(function (details) {
                            //alert('Transaction completed by ' + JSON.stringify(details));
                            // Call your server to save the transaction
                            var response = fetch('/Payment/Complete', {
                                method: 'post',
                                headers: {
                                    'content-type': 'application/json'
                                },
                                body: JSON.stringify(details)
                            });
                            //console.log(response);

                            $(".tokkepedia-loading").hide();
                            isProcessing = false;

                            return response;
                        });
                    });
                }
            }).render('#paypal-button-container-3');

            $("#btnPurchase").click(function () {
                var avatarId = $(this).attr("data-avatarid");
                var stickerId = $(this).attr("data-stickerid");
                var type = $(this).attr("data-type");

                switch (type) {
                    case 0: // Avatar
                        if (avatarId != 0) {
                            var opt = {};
                            opt.url = "Payment/BuyAvatar";
                            opt.type = "POST";
                            opt.data = { avatarId: avatarId };
                            opt.async = true;
                            opt.success = function (htmlData) {
                                // Success
                            };
                            opt.error = function () {
                                //$("#containerProgress").hide();
                            };
                            opt.beforeSend = function () {
                                //$("#containerProgress").show();
                                $(this).attr("disabled", true);
                            };
                            opt.complete = function () {
                                //$("#containerProgress").hide();
                            };
                            $.ajax(opt);
                        }
                        else {
                            // No avatar selected
                        }
                        break;
                    case 1: // Sticker
                        if (stickerId != 0) {
                            var opt = {};
                            opt.url = "Payment/BuySticker";
                            opt.type = "POST";
                            opt.data = { stickerId: stickerId };
                            opt.async = true;
                            opt.success = function (htmlData) {
                                // Success
                                console.log(htmlData);
                                location.reload();
                            };
                            opt.error = function () {
                                //$("#containerProgress").hide();
                            };
                            opt.beforeSend = function () {
                                //$("#containerProgress").show();
                                $(this).attr("disabled", true);
                            };
                            opt.complete = function () {
                                //$("#containerProgress").hide();
                            };
                            $.ajax(opt);
                        }
                        else {
                            // No avatar selected
                        }
                        break;
                }
            });

            function BuyAvatar(avatarId = '', avatarImage = '', avatarName = '', avatarCoins = 0, avatarUSD = 0) {
                $("#btnPurchase").attr("data-avatarid", avatarId);
                $("#btnPurchase").attr("data-type", 0);
                $("#imgAvatar").attr("src", avatarImage);
                $("#txtName").text(avatarName);
                $("#txtPriceCoins").text(avatarCoins + " coins");
                $("#txtPriceUSD").text(avatarUSD);
            }

            function BuySticker(stickerId = '', stickerImage = '', stickerName = '', stickerCoins = 0, stickerUSD = 0) {
                $("#btnPurchase").attr("data-stickerid", stickerId);
                $("#btnPurchase").attr("data-type", 1);
                $("#imgAvatar").attr("src", stickerImage);
                $("#txtName").text(stickerName);
                $("#txtPriceCoins").text(stickerCoins + " coins");
                $("#txtPriceUSD").text(stickerUSD);
            }
        </script>
    }

    <script>
    var selectedPackageType = 3;
    var isProcessing = false;

        function SelectPackage(pkg, pkgType) {
            $(".single-price-plan").removeClass("active");

            $(pkg).addClass("active");
            selectedPackageType = pkgType;

            $(".btnPaypal").addClass("hide");
            $(".btnSelect").removeClass("hide");

            $(pkg).find(".btnSelect").addClass("hide");
            $("#paypal-button-container-" + pkgType).removeClass("hide");

            if ('@User.Identity.IsAuthenticated' === 'False')
            {
                location.href = "/login?returnUrl=/shop";
            }
        }

    $(document).ready(function () {
        window.onbeforeunload = function () {
            if (isProcessing) {
                return "Are you sure you want to leave the page? you have unsaved changes.";
                } else {
                    return;
                }
            };
    });
    </script>
}