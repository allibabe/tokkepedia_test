@model List<Tok>

@{
    var cnt = 0;
    var myClass = "";

    switch (Model.Count)
    {
        case 3:
            myClass = "col-12 col-md-4";
            break;
        case 4:
            myClass = "col-12 col-md-3";
            break;
        case 2:
        default:
            myClass = "col-12 col-md-6";
            break;
    }
}

@foreach (var tok in Model)
{
    <div class="@myClass cardColumn" data-round="@ViewBag.CurrentRound">
        <div class="row">
            <div class="col-md-12">
                <div class="card custom-card">
                    <div id="tmCard_@cnt" data-matchid="@tok.Id" data-iscard="1" class="front center-content rounded-corner col-md-12 empty" style="background-color: #fff; padding: 0px; overflow:auto; height: 350px;">
                        <div class="p-4 col-md-12 text-center center-content description" id="content">
                            @if (!tok.IsDetailBased && !string.IsNullOrEmpty(tok.SecondaryFieldText))
                            {
                                var ln1 = tok.SecondaryFieldText.Length;
                                if (ln1 >= 100)
                                {
                                    <h4>@tok.SecondaryFieldText</h4>
                                }
                                else
                                {
                                    <h3>@tok.SecondaryFieldText</h3>
                                }
                            }
                            else if (tok.IsDetailBased)
                            {
                                @for (int i = 0; i < 5; ++i)
                                {
                                    if (!string.IsNullOrEmpty(tok.Details[i]))
                                    {
                                        <input type="hidden" id="detailtext@(i+1)-@tok.Id" value="@tok.Details[i]" />
                                        <span class="@(i!=0 ? "hide" : "")">@Html.Raw("• ") @Html.DisplayFor(model => tok.Details[i])</span>
                                        <br />
                                    }
                                }

                                if (tok.Details.Count() > 0)
                                {
                                    <div class="col-md-12 text-center btnShowMore" style="cursor: pointer; background-color: #DBCCFF; position: absolute; bottom: 0;" onclick="showMore(this)"><i class="fas fa-angle-double-down showMoreIcon" style="color: #9572e8"></i></div>
                                }
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => tok.Category)
                            }
                        </div>
                    </div>
                    <div class="back rounded-corner center-content" style="height: 350px;">
                        <div class="p-4 col-md-12">
                            <div class="col-md-12 text-center center-content containerImage" style="display: block;">
                                <img id="answerBack" src="~/images/tokmatch/x.png" style="margin: 12px; width: 50%; height: 50%;">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12 shuffleContainer">
                <div class="answerContainer" style="height: 196px;" data-iscontainer="1" data-tokid="@tok.Id">
                    @if (tok.Image != null)
                    {
                        if (!String.IsNullOrEmpty(tok.Image))
                        {
                            <div class="img-container backImage hide" style="position: relative; height: 100%; padding: 5px;">
                                <img class="cropped" src="@tok.Image" />
                            </div>
                        }
                    }
                    else
                    {
                        @* This is an empty if no image*@
                        <div class="backImage hide"></div>
                    }
                    <div id="answerHolder_@cnt" data-matchid="@tok.Id" class="empty2 answerHolder bg-white" draggable="true" ondrag="dragStart(this)" style="position: relative; width: 100%; height: 100%">
                        <div id="answerContent_@cnt" class="answer">
                            @if (tok.Image != null)
                            {
                                if (!String.IsNullOrEmpty(tok.Image))
                                {
                                    <div class="img-container" style="position: unset !important; height: auto;">
                                        <img class="cropped" src="@tok.Image" />
                                    </div>
                                }
                            }
                            <div id="answertext" class="answertextBox">
                                @{
                                    var ln = tok.PrimaryFieldText?.Length ?? 0;
                                    if (ln >= 50)
                                    {
                                        <h4>@tok.PrimaryFieldText</h4>
                                    }
                                    else if (ln >= 200)
                                    {
                                        <h3>@tok.PrimaryFieldText.Substring(0,200)</h3>
                                    }
                                    else
                                    {
                                        <h3>@tok.PrimaryFieldText</h3>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    cnt++;
}

@*<script>
    maxRound = @ViewBag.MaxRound;
    cardCount = @Model.Count;
    shuffleAnswer();
</script>*@